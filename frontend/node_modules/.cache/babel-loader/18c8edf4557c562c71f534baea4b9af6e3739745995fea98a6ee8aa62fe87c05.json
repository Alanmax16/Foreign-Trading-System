{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlanM\\\\OneDrive\\\\Desktop\\\\Foreign_Trading_System\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { tradeAPI } from '../services/api';\nimport TradeHistoryChart from '../components/TradeHistoryChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [stats, setStats] = useState({\n    totalTrades: 0,\n    profitLoss: 0,\n    balance: 0,\n    activePositions: 0\n  });\n  const [tradeData, setTradeData] = useState({\n    dates: [],\n    volumes: [],\n    profits: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        const [statsResponse, historyResponse] = await Promise.all([tradeAPI.getDashboardStats(), tradeAPI.getTradeHistory()]);\n        setStats(statsResponse.data);\n\n        // Process trade history data for the chart\n        const processedData = processTradeHistory(historyResponse.data);\n        setTradeData(processedData);\n      } catch (err) {\n        setError('Failed to load dashboard data');\n        console.error('Dashboard data error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, []);\n  const processTradeHistory = history => {\n    const dates = history.map(trade => new Date(trade.timestamp).toLocaleDateString());\n    const volumes = history.map(trade => trade.volume);\n    const profits = history.map(trade => trade.profitLoss);\n    return {\n      dates,\n      volumes,\n      profits\n    };\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: \"Loading dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: 'var(--error-color)'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginBottom: '2rem'\n      },\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Trades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value\",\n          children: stats.totalTrades\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Profit/Loss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value\",\n          style: {\n            color: stats.profitLoss >= 0 ? 'var(--success-color)' : 'var(--error-color)'\n          },\n          children: [\"$\", stats.profitLoss.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Account Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value\",\n          children: [\"$\", stats.balance.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Active Positions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value\",\n          children: stats.activePositions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(TradeHistoryChart, {\n        tradeData: tradeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"2rU9muF0tfOYTcQ2aeU6WBngikg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","tradeAPI","TradeHistoryChart","jsxDEV","_jsxDEV","Dashboard","_s","stats","setStats","totalTrades","profitLoss","balance","activePositions","tradeData","setTradeData","dates","volumes","profits","loading","setLoading","error","setError","fetchDashboardData","statsResponse","historyResponse","Promise","all","getDashboardStats","getTradeHistory","data","processedData","processTradeHistory","err","console","history","map","trade","Date","timestamp","toLocaleDateString","volume","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/AlanM/OneDrive/Desktop/Foreign_Trading_System/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { tradeAPI } from '../services/api';\nimport TradeHistoryChart from '../components/TradeHistoryChart';\n\nconst Dashboard = () => {\n  const [stats, setStats] = useState({\n    totalTrades: 0,\n    profitLoss: 0,\n    balance: 0,\n    activePositions: 0\n  });\n  \n  const [tradeData, setTradeData] = useState({\n    dates: [],\n    volumes: [],\n    profits: []\n  });\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        const [statsResponse, historyResponse] = await Promise.all([\n          tradeAPI.getDashboardStats(),\n          tradeAPI.getTradeHistory()\n        ]);\n\n        setStats(statsResponse.data);\n        \n        // Process trade history data for the chart\n        const processedData = processTradeHistory(historyResponse.data);\n        setTradeData(processedData);\n      } catch (err) {\n        setError('Failed to load dashboard data');\n        console.error('Dashboard data error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  const processTradeHistory = (history) => {\n    const dates = history.map(trade => new Date(trade.timestamp).toLocaleDateString());\n    const volumes = history.map(trade => trade.volume);\n    const profits = history.map(trade => trade.profitLoss);\n\n    return { dates, volumes, profits };\n  };\n\n  if (loading) {\n    return <div className=\"container\">Loading dashboard...</div>;\n  }\n\n  if (error) {\n    return <div className=\"container\" style={{ color: 'var(--error-color)' }}>{error}</div>;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 style={{ marginBottom: '2rem' }}>Dashboard</h1>\n      \n      <div className=\"dashboard-grid\">\n        <div className=\"stats-card\">\n          <h3>Total Trades</h3>\n          <div className=\"value\">{stats.totalTrades}</div>\n        </div>\n        <div className=\"stats-card\">\n          <h3>Profit/Loss</h3>\n          <div className=\"value\" style={{ \n            color: stats.profitLoss >= 0 ? 'var(--success-color)' : 'var(--error-color)'\n          }}>\n            ${stats.profitLoss.toFixed(2)}\n          </div>\n        </div>\n        <div className=\"stats-card\">\n          <h3>Account Balance</h3>\n          <div className=\"value\">${stats.balance.toFixed(2)}</div>\n        </div>\n        <div className=\"stats-card\">\n          <h3>Active Positions</h3>\n          <div className=\"value\">{stats.activePositions}</div>\n        </div>\n      </div>\n\n      <div className=\"chart-container\">\n        <TradeHistoryChart tradeData={tradeData} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}